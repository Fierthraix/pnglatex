#!/bin/bash

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

BACKGROUND=White
FNAME=$HOME/`date +%s%N`.png
FOREGROUND=Black
FORMULA=
DISPLAY=\$
DPI=96
HEADER=
HELP=0
OPTIMIZE=0
PACKAGES=
PADDING=
SIZE=11
declare -r VERSION=0.2

function clean {
    rm -fr $TMPDIR/$BNAME.aux $TMPDIR/$BNAME.dvi $TMPDIR/$BNAME.log $TMPDIR/$BNAME.tex
}

function main {
    parse "$@"

    if [ $HELP -eq 1 ]; then
        usage
        exit 0
    fi

    if [ ! "$FORMULA" ]; then
        echo "No input formula." >&2
        exit 1
    fi

    BNAME=${FNAME##*/}
    TMPDIR=/tmp/me/mneri/pnglatex

    if [ ! -d $TMPDIR ]; then
        mkdir -p $TMPDIR
    fi

    PREFIX="\documentclass[${SIZE}pt]{article}$PACKAGES\pagestyle{empty}$HEADER\begin{document}$DISPLAY"
    SUFFIX="$DISPLAY\end{document}"

    echo $PREFIX$FORMULA$SUFFIX > $TMPDIR/$BNAME.tex
    latex -halt-on-error -output-directory=$TMPDIR $TMPDIR/$BNAME.tex | sed -n '/^!/,/^ /p'

    if [ ${PIPESTATUS[0]} -ne 0 ]; then
        clean
        exit 1
    fi

    dvipng -bg $BACKGROUND -D $DPI -fg $FOREGROUND -o $FNAME -q --strict -T tight $TMPDIR/$BNAME.dvi > /dev/null

    if [ "$PADDING" ]; then
        pad
    fi

    if [ $OPTIMIZE -eq 1 ]; then
        optimize
    fi

    clean
}

function optimize {
    if optipng -v > /dev/null 2>&1; then
        optipng -zc1-9 -zm1-9 -zs0-3 -f0-5 $FNAME > /dev/null
    else
        echo "Optimization requires optipng package." >&2
        exit 1
    fi
}

function pad {
    if convert -version > /dev/null 2>&1; then
        convert $FNAME -bordercolor $BACKGROUND -border $PADDING $FNAME
    else
        echo "Padding requires imagemagick package." >&2
        exit 1
    fi
}

function parse {
    while getopts b:dD:f:F:hH:o:Op:P:s: ARG; do
        case $ARG in
            b)
                BACKGROUND=$OPTARG
                ;;
            d)
                DISPLAY=\$\$
                ;;
            D)
                DPI=$OPTARG
                ;;
            f)
                FORMULA=$OPTARG
                ;;
            F)
                FOREGROUND=$OPTARG
                ;;
            h)
                HELP=1
                ;;
            H)
                HEADER=\\input\{$OPTARG\}
                ;;
            o)
                FNAME=$OPTARG
                ;;
            O)
                OPTIMIZE=1
                ;;
            p)
                OIFS=$IFS
                IFS=":"
                PLIST=($OPTARG)
                
                for P in $PLIST; do
                    PACKAGES=$PACKAGES\\usepackage{$P}
                done

                IFS=$OIFS
                ;;
            P)
                PADDING=$OPTARG
                ;;
            s)
                SIZE=$OPTARG
        esac
    done
}

function usage {
    echo "pnglatex" $VERSION "- Write LaTeX formulas into PNG files."
    echo "Copyright 2015-2017 Massimo Neri <hello@mneri.me>"
    echo
    echo "List of options:"
    echo "  -b <color>    Set the background color."
    echo "  -d            Use displaymath environment."
    echo "  -D <dpi>      Set the output resolution to the specified dpi."
    echo "  -f <formula>  Mandatory, the LaTeX formula."
    echo "  -F <color>    Set the foreground color."
    echo "  -h            Print this help message."
    echo "  -H <header>   Input file in header."
    echo "  -o <file>     Specify the output file name."
    echo "  -O            Optimize the image."
    echo "  -p <packages> A colon separated list of LaTeX package names."
    echo "  -P <padding>  Set the padding."
    echo "  -s <size>     Set the font size."
    echo
    echo "Examples:"
    echo "  pnglatex -o ~/gauss.png -f \"\sum_{i=0}^n i=\frac{n(n+1)}{2}\""
    echo "  pnglatex -b Transparent -o def.png -p amssymb:amsmath -P 10x2 -s 12 -f \"A\triangleq B\""
}

trap "clean" SIGINT SIGTERM
main "$@"
