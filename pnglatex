#!/bin/bash

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

BACKGROUND=White
BORDER=
FOREGROUND=Black
FORMULA=
DISPLAY=\$
DPI=96
HEADER=
HELP=0
MARGIN=
OPTIMIZE=0
PACKAGES=
PADDING=
PNGFILE=
SHOWVERSION=0
SILENT=0
SIZE=11
TEXFILE=
declare -r VERSION=0.5

function box {
    if [ ! convert -version > /dev/null 2>&1 ]; then
        echo "Paddings, borders and margins require imagemagick package."
        exit 1
    fi

    if [ "$PADDING" ]; then
        convert $PNGFILE -bordercolor $BACKGROUND -border $PADDING $PNGFILE
    fi

    if [ "$BORDER" ]; then
        convert $PNGFILE -bordercolor $BORDER -border 1 $PNGFILE
    fi

    if [ "$MARGIN" ]; then
        convert $PNGFILE -bordercolor $BACKGROUND -border $MARGIN $PNGFILE
    fi
}

function clean {
    local BNAME=${TEXFILE%.tex}
    rm -fr $TEXFILE $BNAME.aux $BNAME.dvi $BNAME.log
}

function main {
    local BNAME
    
    parse "$@"

    if [ $HELP -eq 1 ]; then
        usage
        exit 0
    fi

    if [ $SHOWVERSION -eq 1 ]; then
        version
        exit 0
    fi

    if [ ! "$FORMULA" ]; then
        echo "No input formula." >&2
        exit 1
    fi

    TMPDIR=/tmp/me/mneri/pnglatex

    if [ ! -d $TMPDIR ]; then
        mkdir -p $TMPDIR
    fi

    TEXFILE=$(tempfile -d $TMPDIR -p f -s .tex)
    PREFIX="\documentclass[${SIZE}pt]{article}$PACKAGES\pagestyle{empty}$HEADER\begin{document}$DISPLAY"
    SUFFIX="$DISPLAY\end{document}"

    echo $PREFIX$FORMULA$SUFFIX > $TEXFILE
    latex -halt-on-error -interaction=nonstopmode -output-directory=$TMPDIR $TEXFILE | sed -n '/^!/,/^ /p'

    if [ ${PIPESTATUS[0]} -ne 0 ]; then
        clean
        exit 1
    fi

    if [ ! "$PNGFILE" ]; then
        BNAME=$(basename $TEXFILE)
        PNGFILE=$PWD/${BNAME%.tex}.png
    fi

    dvipng -bg $BACKGROUND -D $DPI -fg $FOREGROUND -o $PNGFILE -q --strict -T tight ${TEXFILE%.tex}.dvi > /dev/null

    if [ "$PADDING" ] || [ "$BORDER" ] || [ "$MARGIN" ]; then
        box
    fi

    if [ $OPTIMIZE -eq 1 ]; then
        optimize
    fi

    if [ $SILENT -eq 0 ]; then
        realpath $PNGFILE
    fi

    clean
}

function optimize {
    if optipng -v > /dev/null 2>&1; then
        optipng -zc1-9 -zm1-9 -zs0-3 -f0-5 -quiet $PNGFILE
    else
        echo "Optimization requires optipng package." >&2
        exit 1
    fi
}

function parse {
    while getopts b:B:dD:f:F:hH:m:o:Op:P:s:Sv ARG; do
        case $ARG in
            b)
                BACKGROUND=$OPTARG
                ;;
            B)
                BORDER=$OPTARG
                ;;
            d)
                DISPLAY=\$\$
                ;;
            D)
                DPI=$OPTARG
                ;;
            f)
                FORMULA=$OPTARG
                ;;
            F)
                FOREGROUND=$OPTARG
                ;;
            h)
                HELP=1
                ;;
            H)
                HEADER=\\input\{$OPTARG\}
                ;;
            m)
                MARGIN=$OPTARG

                if [ ! $(echo $MARGIN | egrep '^[0-9]+(x[0-9]+)?$') ]; then
                    echo "Invalid margin." >&2
                    exit 1
                fi
                ;;
            o)
                PNGFILE=$OPTARG
                ;;
            O)
                OPTIMIZE=1
                ;;
            p)
                OIFS=$IFS
                IFS=":"
                PLIST=($OPTARG)
                
                for P in $PLIST; do
                    PACKAGES=$PACKAGES\\usepackage{$P}
                done

                IFS=$OIFS
                ;;
            P)
                PADDING=$OPTARG

                if [ ! $(echo $PADDING | egrep '^[0-9]+(x[0-9]+)?$') ]; then
                    echo "Invalid padding." >&2
                    exit 1
                fi
                ;;
            s)
                SIZE=$OPTARG
                ;;
            S)
                SILENT=1
                ;;
            v)
                SHOWVERSION=1
        esac
    done
}

function usage {
    echo "pnglatex" $VERSION "- Write LaTeX formulas into PNG files."
    echo "Copyright 2015-2017 Massimo Neri <hello@mneri.me>"
    echo
    echo "List of options:"
    echo "  -b <color>    Set the background color."
    echo "  -B <color>    Set the border color."
    echo "  -d            Use displaymath environment."
    echo "  -D <dpi>      Set the output resolution to the specified dpi."
    echo "  -f <formula>  Mandatory, the LaTeX formula."
    echo "  -F <color>    Set the foreground color."
    echo "  -h            Print this help message."
    echo "  -H <header>   Input file in header."
    echo "  -m <margin>   Set the margin."
    echo "  -o <file>     Specify the output file name."
    echo "  -O            Optimize the image."
    echo "  -p <packages> A colon separated list of LaTeX package names."
    echo "  -P <padding>  Set the padding."
    echo "  -s <size>     Set the font size."
    echo "  -S            Don't print image file name."
    echo "  -v            Show version."
    echo
    echo "Examples:"
    echo "  pnglatex -o ~/gauss.png -f \"\sum_{i=0}^n i=\frac{n(n+1)}{2}\""
    echo "  pnglatex -b Transparent -o def.png -p amssymb:amsmath -P 10x2 -s 12 -f \"A\triangleq B\""
}

function version {
    echo $VERSION
}

trap "clean" SIGINT SIGTERM
main "$@"
